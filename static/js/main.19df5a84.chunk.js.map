{"version":3,"sources":["serviceWorker.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/ScrollView.js","components/ErrorBoundry.js","containers/robots.js","containers/App.js","index.js"],"names":["Boolean","window","location","hostname","match","Card","id","name","email","console","log","className","alt","src","CardList","robots","map","user","i","key","SearchBox","onSearch","type","placeholder","onChange","ScrollView","props","style","background","overflow","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","username","App","onSearchChange","event","searchfield","target","value","filteredRobots","filter","robot","toLowerCase","includes","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iLAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,6CCFSC,EAdF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,MAExB,OADAC,QAAQC,IAAIJ,GAEX,yBAAKK,UAAU,iDACd,yBAAKC,IAAI,SAASC,IAAG,+BAA0BP,EAA1B,cACrB,6BACC,4BAAKC,GACL,2BAAIC,MCaOM,EAnBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAQlB,OACC,6BAEEA,EAAOC,KAAI,SAACC,EAAMC,GACjB,OAAO,kBAAC,EAAD,CAAMC,IAAKD,EAAGZ,GAAIW,EAAKX,GAAIC,KAAMU,EAAKV,KAAMC,MAAOS,EAAKT,aCArDY,EAbG,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACnB,OACC,yBAAKV,UAAU,OACd,2BACCA,UAAU,2CACVW,KAAK,SACLC,YAAY,qBACZC,SAAUH,MCCCI,EARI,SAACC,GACnB,OACC,yBAAKC,MAAO,CAAEC,WAAY,oCAAqCC,SAAU,SAAUC,OAAQ,UACzFJ,EAAMK,WCqBKC,E,YAtBd,WAAYN,GAAQ,IAAD,8BAClB,+CAEKO,MAAQ,CACZC,UAAU,GAJO,E,+EAQDC,EAAOC,GACxBC,KAAKC,SAAS,CAACJ,UAAU,M,+BAIzB,OAAGG,KAAKJ,MAAMC,SACN,wDAIDG,KAAKX,MAAMK,a,GApBOQ,aCFdxB,EAAS,CACpB,CACET,GAAI,EACJC,KAAM,gBACNiC,SAAU,OACVhC,MAAO,qBAET,CACEF,GAAI,EACJC,KAAM,eACNiC,SAAU,YACVhC,MAAO,qBAET,CACEF,GAAI,EACJC,KAAM,mBACNiC,SAAU,WACVhC,MAAO,sBAET,CACEF,GAAI,EACJC,KAAM,mBACNiC,SAAU,WACVhC,MAAO,6BAET,CACEF,GAAI,EACJC,KAAM,mBACNiC,SAAU,SACVhC,MAAO,4BAET,CACEF,GAAI,EACJC,KAAM,uBACNiC,SAAU,mBACVhC,MAAO,2BAET,CACEF,GAAI,EACJC,KAAM,kBACNiC,SAAU,eACVhC,MAAO,0BAET,CACEF,GAAI,EACJC,KAAM,2BACNiC,SAAU,gBACVhC,MAAO,wBAET,CACEF,GAAI,EACJC,KAAM,kBACNiC,SAAU,WACVhC,MAAO,2BAET,CACEF,GAAI,GACJC,KAAM,qBACNiC,SAAU,iBACVhC,MAAO,2BChBIiC,E,YAlCd,aAAe,IAAD,8BACb,+CAQDC,eAAiB,SAACC,GACjB,EAAKL,SAAS,CAACM,YAAaD,EAAME,OAAOC,SAPzC,EAAKb,MAAQ,CACZlB,OAAQA,EACR6B,YAAa,IALD,E,sEAaJ,IAAD,OAGFG,EAAiBV,KAAKJ,MAAMlB,OAAOiC,QAAO,SAACC,GAChD,OAAOA,EAAM1C,KAAK2C,cAAcC,SAAS,EAAKlB,MAAMW,YAAYM,kBAGjE,OACC,yBAAKvC,UAAU,SACd,wBAAIA,UAAU,6CAAd,WACA,kBAAC,EAAD,CAAWU,SAAUgB,KAAKK,iBAC1B,kBAAC,EAAD,KACC,kBAAC,EAAD,KACC,kBAAC,EAAD,CAAU3B,OAAQgC,W,GA5BNR,aCAlBa,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SR4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.19df5a84.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\n\nconst Card = ({id, name, email}) => {\n\tconsole.log(id);\n\treturn(\n\t\t<div className=\"tc bg-washed-red dib br3 ma2 grow bw shadow-5\">\n\t\t\t<img alt='robots' src={`https://robohash.org/${id}?200x200`}/>\n\t\t\t<div>\n\t\t\t\t<h2>{name}</h2>\n\t\t\t\t<p>{email}</p>\n\t\t\t</div>\n\t\t</div>\n\n\t);\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({robots}) => {\n\n\t//ALTERNATIVE ***\n\n\t// const cardArray = robots.map((user, i) => {\n\t// \treturn <Card key={i} id={user.id} name={user.name} email={user.email}/>\n\t// });\n\n\treturn (\n\t\t<div>\n\t\t\t{\n\t\t\t\trobots.map((user, i) => {\n\t\t\t\t\treturn <Card key={i} id={user.id} name={user.name} email={user.email}/>\n\t\t\t\t})\n\t\t\t}\n\t\t</div>\n\t);\n};\n\nexport default CardList;\n","import React from 'react';\n\nconst SearchBox = ({onSearch}) => {\n\treturn (\n\t\t<div className=\"pa3\">\n\t\t\t<input \n\t\t\t\tclassName=\"shadow-1\ttc pa3 ba b--red bg-washed-red\"\t\n\t\t\t\ttype=\"search\" \n\t\t\t\tplaceholder=\"Search for a Robot\"\n\t\t\t\tonChange={onSearch}\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nexport default SearchBox","import React from 'react';\n\nconst ScrollView = (props) => {\n\treturn (\n\t\t<div style={{ background: 'linear-gradient(#833ab4, #ff6666)', overflow: 'scroll', height: '680px'}}>\n\t\t\t{props.children}\n\t\t</div>\n\t);\n}\n\nexport default ScrollView","import React, { Component } from 'react';\n\nclass ErrorBoundry extends Component {\n\n\tconstructor(props) {\n\t\tsuper();\n\n\t\tthis.state = {\n\t\t\thasError: false,\n\t\t};\n\t}\n\n\tcomponentDidCatch(error, info) {\n\t\tthis.setState({hasError: true});\n\t}\n\n\trender() {\n\t\tif(this.state.hasError) {\n\t\t\treturn <h1>Houston we have an Error</h1>\n\t\t}\n\n\t\t// no error render children inside boundry\n\t\treturn this.props.children;\n\t}\n}\n\nexport default ErrorBoundry;","export const robots = [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz'\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv'\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net'\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org'\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca'\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info'\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz'\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me'\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io'\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz'\n  }\n];\n","import React, { Component } from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport ScrollView from '../components/ScrollView';\nimport ErrorBoundry from '../components/ErrorBoundry';\nimport { robots } from './robots';\n\nclass App extends Component {\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.state = {\n\t\t\trobots: robots,\n\t\t\tsearchfield: '',\n\t\t}\n\t}\n\n\tonSearchChange = (event) => {\n\t\tthis.setState({searchfield: event.target.value});\t\n\t}\n\n\trender() {\n\n\t\t//filter robots based on search field \n\t\tconst filteredRobots = this.state.robots.filter((robot) =>{\n\t\t\treturn robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\n\t\t})\n\n\t\treturn( \n\t\t\t<div className=\"tc xo\">\n\t\t\t\t<h1 className=\"tc f-headline lh-solid washed-red courier\"> ROBOTS</h1>\n\t\t\t\t<SearchBox onSearch={this.onSearchChange}/>\n\t\t\t\t<ScrollView>\n\t\t\t\t\t<ErrorBoundry>\n\t\t\t\t\t\t<CardList robots={filteredRobots}/>\n\t\t\t\t\t</ErrorBoundry>\n\t\t\t\t</ScrollView>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\nimport App from './containers/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}